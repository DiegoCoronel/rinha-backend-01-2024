/*
 * This file is generated by jOOQ.
 */
package br.rinha.meta.tables.records;


import br.rinha.meta.tables.Transacao;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransacaoRecord extends TableRecordImpl<TransacaoRecord> implements Record5<Long, Integer, LocalDateTime, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transacao.id_cliente</code>.
     */
    public void setIdCliente(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.transacao.id_cliente</code>.
     */
    public Long getIdCliente() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.transacao.valor</code>.
     */
    public void setValor(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.transacao.valor</code>.
     */
    public Integer getValor() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.transacao.realizada_em</code>.
     */
    public void setRealizadaEm(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.transacao.realizada_em</code>.
     */
    public LocalDateTime getRealizadaEm() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.transacao.tipo</code>.
     */
    public void setTipo(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.transacao.tipo</code>.
     */
    public String getTipo() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.transacao.descricao</code>.
     */
    public void setDescricao(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.transacao.descricao</code>.
     */
    public String getDescricao() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Integer, LocalDateTime, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Integer, LocalDateTime, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Transacao.TRANSACAO.ID_CLIENTE;
    }

    @Override
    public Field<Integer> field2() {
        return Transacao.TRANSACAO.VALOR;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Transacao.TRANSACAO.REALIZADA_EM;
    }

    @Override
    public Field<String> field4() {
        return Transacao.TRANSACAO.TIPO;
    }

    @Override
    public Field<String> field5() {
        return Transacao.TRANSACAO.DESCRICAO;
    }

    @Override
    public Long component1() {
        return getIdCliente();
    }

    @Override
    public Integer component2() {
        return getValor();
    }

    @Override
    public LocalDateTime component3() {
        return getRealizadaEm();
    }

    @Override
    public String component4() {
        return getTipo();
    }

    @Override
    public String component5() {
        return getDescricao();
    }

    @Override
    public Long value1() {
        return getIdCliente();
    }

    @Override
    public Integer value2() {
        return getValor();
    }

    @Override
    public LocalDateTime value3() {
        return getRealizadaEm();
    }

    @Override
    public String value4() {
        return getTipo();
    }

    @Override
    public String value5() {
        return getDescricao();
    }

    @Override
    public TransacaoRecord value1(Long value) {
        setIdCliente(value);
        return this;
    }

    @Override
    public TransacaoRecord value2(Integer value) {
        setValor(value);
        return this;
    }

    @Override
    public TransacaoRecord value3(LocalDateTime value) {
        setRealizadaEm(value);
        return this;
    }

    @Override
    public TransacaoRecord value4(String value) {
        setTipo(value);
        return this;
    }

    @Override
    public TransacaoRecord value5(String value) {
        setDescricao(value);
        return this;
    }

    @Override
    public TransacaoRecord values(Long value1, Integer value2, LocalDateTime value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransacaoRecord
     */
    public TransacaoRecord() {
        super(Transacao.TRANSACAO);
    }

    /**
     * Create a detached, initialised TransacaoRecord
     */
    public TransacaoRecord(Long idCliente, Integer valor, LocalDateTime realizadaEm, String tipo, String descricao) {
        super(Transacao.TRANSACAO);

        setIdCliente(idCliente);
        setValor(valor);
        setRealizadaEm(realizadaEm);
        setTipo(tipo);
        setDescricao(descricao);
        resetChangedOnNotNull();
    }
}
